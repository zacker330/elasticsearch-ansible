---
# tasks file for elasticsearch-ansible

- name: "create {{elasticsearch_group}} "
  group: name={{ elasticsearch_group }} state=present

- name: "create {{ elasticsearch_username }}"
  user: name={{ elasticsearch_username }} groups={{ elasticsearch_group }} append=yes


- name: "mkdir {{elasticsearch_install_dir}}"
  file:
    path: "{{elasticsearch_install_dir}}"
    state: directory
    owner: "root"
    group: "root"
    mode: "uog=rwx"

- name: "mkdir elasticsearch folders"
  file:
    path: "{{item}}"
    state: directory
    owner: "{{elasticsearch_username}}"
    group: "{{elasticsearch_group}}"
    mode: "u=rwx,og=r"
  with_items:
    - "{{elasticsearch_log_folder}}"
    - "{{elasticsearch_data_folder}}"
    - "{{elasticsearch_pid_folder}}"

- stat:
    path: "{{elasticsearch_install_dir}}/{{elasticsearch_tar_file_name}}"
  register: elasticsearch_tar


- name: download elasticsearch
  get_url:
    url: "{{elasticsearch_download_url}}"
    dest: "{{elasticsearch_install_dir}}/{{elasticsearch_tar_file_name}}"
    owner: "{{elasticsearch_username}}"
    group: "{{elasticsearch_group}}"
    mode: "u=rx,og=r"
    # checksum: "sha1:2b19e0e334db8880e352c392a52d464be3d8bc0b"
  # when: elasticsearch_tar.stat.exists = false

- name: unarchive elasticsearch
  unarchive:
    src: "{{elasticsearch_install_dir}}/{{elasticsearch_tar_file_name}}"
    dest: "{{elasticsearch_install_dir}}"
    remote_src: True
    owner: "{{elasticsearch_username}}"
    group: "{{elasticsearch_group}}"
    mode: "u=rwx,og=rx"


- name: mkdir elasticsearch home link
  file:
    dest: "{{elasticsearch_home}}"
    src: "{{elasticsearch_install_dir}}/elasticsearch-{{elasticsearch_version}}"
    owner: "{{elasticsearch_username}}"
    state: link
    group: "{{elasticsearch_group}}"
    mode: "u=rwx,og=rx"

- name: template elasticsearch config
  template:
    src: elasticsearch.yml
    dest: "{{elasticsearch_home}}/config"
    owner: "{{elasticsearch_username}}"
    group: "{{elasticsearch_group}}"
    mode: "u=rwx,og=r"


- name: template elasticsearch-service
  template:
    src: elasticsearch.service
    dest: "/etc/systemd/system"
    owner: "root"
    group: "root"
    mode: "u=rwx,gu=rx"

- name: reload systemd
  become: yes
  command: "systemctl daemon-reload"

- name: restart service
  become: yes
  service:
    name: "{{elasticsearch_service_name}}"
    state: "restarted"

- wait_for:
    port: "{{elasticsearch_http_port}}"
    delay: 10
